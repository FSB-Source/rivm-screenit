<!--
  ========================LICENSE_START=================================
  screenit-batch-bmhk
  %%
  Copyright (C) 2012 - 2022 Facilitaire Samenwerking Bevolkingsonderzoek
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  =========================LICENSE_END==================================
  -->
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/batch"
             xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/batch
           http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">
    

    <beans:bean id="koppelPromotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <beans:property name="keys">
            <beans:list>
                <beans:value>koppelXMLData</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="statuses">
            <beans:list>
                <beans:value>COMPLETED</beans:value>
                <beans:value>FAILED</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

    
    <beans:bean id="cervixSelectiePartitionHandler"
                class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
        <beans:property name="taskExecutor" ref="taskExecutor"/>
        <beans:property name="step" ref="cervix.clientselectie"/>
        <beans:property name="gridSize" value="10"/>
    </beans:bean>
    <beans:bean id="cervixLabPartitioner" class="nl.rivm.screenit.batch.jobs.cervix.CervixLabPartitioner"/>
    <beans:bean id="cervixSelectieReader" class="nl.rivm.screenit.batch.jobs.cervix.selectie.selectiestep.CervixSelectieReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixSelectieWriter" class="nl.rivm.screenit.batch.jobs.cervix.selectie.selectiestep.CervixSelectieWriter"/>
    <beans:bean id="cervixLaatsteRondeSluitenReader" class="nl.rivm.screenit.batch.jobs.cervix.selectie.laatsterondesluitenstep.CervixLaatsteRondeSluitenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixLaatsteRondeSluitenWriter" class="nl.rivm.screenit.batch.jobs.cervix.selectie.laatsterondesluitenstep.CervixLaatsteRondeSluitenWriter"/>
    <beans:bean id="cervixSelectieJobListener" class="nl.rivm.screenit.batch.jobs.cervix.selectie.CervixSelectieJobListener"/>

    <beans:bean id="preSelectieStepTasklet" class="nl.rivm.screenit.batch.jobs.preselectie.ClientPreSelectieTasklet">
        <beans:property name="bvo" value="CERVIX"/>
    </beans:bean>

    <job id="cervix_selectie" restartable="true">
        <step id="pre_selectie_step" next="cervix.clientselectie.master">
            <tasklet ref="preSelectieStepTasklet"
                     transaction-manager="transactionManager">
            </tasklet>
        </step>
        <step id="cervix.clientselectie.master" next="laatste_ronde_sluiten_step">
            <partition partitioner="cervixLabPartitioner" handler="cervixSelectiePartitionHandler"
                       step="cervix.clientselectie"/>
        </step>
        <step id="laatste_ronde_sluiten_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixLaatsteRondeSluitenReader"
                       writer="cervixLaatsteRondeSluitenWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixSelectieJobListener"/>
        </listeners>
    </job>

    <step id="cervix.clientselectie">
        <tasklet transaction-manager="transactionManager">
            <chunk reader="cervixSelectieReader"
                   writer="cervixSelectieWriter" commit-interval="10">
            </chunk>
        </tasklet>
    </step>

    
    <beans:bean id="cervixILMRondesVerwijderenReader" class="nl.rivm.screenit.batch.jobs.cervix.ilm.rondesverwijderenstep.CervixILMRondesVerwijderenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixILMRondesVerwijderenWriter" class="nl.rivm.screenit.batch.jobs.cervix.ilm.rondesverwijderenstep.CervixILMRondesVerwijderenWriter"/>
    <beans:bean id="ilmApplicatieLoggingVerwijderenReader" class="nl.rivm.screenit.batch.jobs.ilm.applicatielogging.IlmApplicatieLoggingVerwijderenReader">
        <beans:property name="bvo" value="CERVIX"/>
    </beans:bean>
    <beans:bean id="ilmApplicatieLoggingVerwijderenWriter" class="nl.rivm.screenit.batch.jobs.ilm.applicatielogging.IlmApplicatieLoggingVerwijderenWriter"/>
    <beans:bean id="cervixILMJobListener" class="nl.rivm.screenit.batch.jobs.cervix.ilm.CervixILMJobListener"/>

    <job id="cervix_ilm" restartable="true">
        <step id="rondesverwijderen_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixILMRondesVerwijderenReader"
                       writer="cervixILMRondesVerwijderenWriter" commit-interval="10">
                </chunk>
            </tasklet>
            <next on="*" to="ilm_applicatie_logging_verwijderen"/>
            <next on="FAILED" to="ilm_applicatie_logging_verwijderen"/>
        </step>
        <step id="ilm_applicatie_logging_verwijderen">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="ilmApplicatieLoggingVerwijderenReader"
                       writer="ilmApplicatieLoggingVerwijderenWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixILMJobListener"/>
        </listeners>
    </job>

    
    <beans:bean id="cervixVervolgonderzoekReader" class="nl.rivm.screenit.batch.jobs.cervix.vervolgonderzoek.step.CervixVervolgonderzoekReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixVervolgonderzoekWriter" class="nl.rivm.screenit.batch.jobs.cervix.vervolgonderzoek.step.CervixVervolgonderzoekWriter"/>
    <beans:bean id="cervixVervolgonderzoekJobListener" class="nl.rivm.screenit.batch.jobs.cervix.vervolgonderzoek.CervixVervolgonderzoekJobListener"/>

    <job id="cervix_vervolgonderzoek" restartable="true">
        <step id="vervolgonderzoek_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixVervolgonderzoekReader"
                       writer="cervixVervolgonderzoekWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixVervolgonderzoekJobListener"/>
        </listeners>
    </job>

    
    <beans:bean id="cervixZasHerinnerenReader" class="nl.rivm.screenit.batch.jobs.cervix.herinneren.zasstep.CervixZasHerinnerenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixUitstrijkjeHerinnerenReader" class="nl.rivm.screenit.batch.jobs.cervix.herinneren.uitstrijkjestep.CervixUitstrijkjeHerinnerenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixHerinnerenWriter" class="nl.rivm.screenit.batch.jobs.cervix.herinneren.allsteps.CervixHerinnerenWriter"/>
    <beans:bean id="cervixHerinnerenJobListener" class="nl.rivm.screenit.batch.jobs.cervix.herinneren.CervixHerinnerenJobListener"/>

    <job id="cervix_herinneren" restartable="true">
        <step id="herinneren_zas_step" next="herinneren_uitstrijkje_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixZasHerinnerenReader"
                       writer="cervixHerinnerenWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="herinneren_uitstrijkje_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixUitstrijkjeHerinnerenReader"
                       writer="cervixHerinnerenWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixHerinnerenJobListener"/>
        </listeners>
    </job>

    
    <beans:bean id="cervixUitstelReader" class="nl.rivm.screenit.batch.jobs.cervix.uitstel.step.CervixUitstelReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixUitstelWriter" class="nl.rivm.screenit.batch.jobs.cervix.uitstel.step.CervixUitstelWriter"/>
    <beans:bean id="cervixUitstelJobListener" class="nl.rivm.screenit.batch.jobs.cervix.uitstel.CervixUitstelJobListener"/>

    <job id="cervix_uitstel" restartable="true">
        <step id="uitstel_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixUitstelReader"
                       writer="cervixUitstelWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixUitstelJobListener"/>
        </listeners>
    </job>

    
    <beans:bean id="cervixGevolgenLabprocesVerwerkenReader" class="nl.rivm.screenit.batch.jobs.cervix.gevolgenlabprocesverwerken.step.CervixGevolgenLabprocesVerwerkenReader">
        <beans:property name="fetchSize" value="1000"/>
    </beans:bean>
    <beans:bean id="cervixGevolgenLabprocesVerwerkenWriter" class="nl.rivm.screenit.batch.jobs.cervix.gevolgenlabprocesverwerken.step.CervixGevolgenLabprocesVerwerkenWriter"/>
    <beans:bean id="cervixGevolgenLabprocesVerwerkenJobListener" class="nl.rivm.screenit.batch.jobs.cervix.gevolgenlabprocesverwerken.CervixGevolgenLabprocesVerwerkenJobListener"/>

    <job id="cervix_gevolgen_labproces_verwerken" restartable="true">
        <step id="gevolgen_labproces_verwerken_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixGevolgenLabprocesVerwerkenReader"
                       writer="cervixGevolgenLabprocesVerwerkenWriter" commit-interval="1000">
                </chunk>
            </tasklet>
        </step>

        <listeners>
            <listener ref="cervixGevolgenLabprocesVerwerkenJobListener"/>
        </listeners>
    </job>

    
    <beans:bean id="cervixBrievenPartitionHandler"
                class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
        <beans:property name="taskExecutor" ref="taskExecutor"/>
        <beans:property name="step" ref="cervixBrievenGenereren"/>
        <beans:property name="gridSize" value="10"/>
    </beans:bean>
    <beans:bean id="cervixBrievenListener" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.CervixBriefListener"/>
    <beans:bean id="cervixBrievenPartitioner" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.genererenstep.CervixBrievenGenererenPartitioner"/>
    <beans:bean id="cervixBrievenReader" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.genererenstep.CervixBrievenGenererenReader"/>
    <beans:bean id="cervixBrievenWriter" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.genererenstep.CervixBrievenGenererenWriter"/>
    <beans:bean id="cervixBrievenProcessor" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.genererenstep.CervixBrievenGenererenProcessor"/>
    <beans:bean id="cervixBriefCleanupReader" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.cleanupstep.CervixBriefCleanupReader"/>
    <beans:bean id="cervixBriefCleanupWriter" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.cleanupstep.CervixBriefCleanupWriter"/>

    <beans:bean id="cervixBrievenControleReader" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.controle.CervixBrievenControleReader"/>
    <beans:bean id="cervixBrievenControleWriter" class="nl.rivm.screenit.batch.jobs.cervix.brieven.client.controle.CervixBrievenControleWriter"/>

    
    <job id="cervix_brieven">
        <step id="brievenCleanup" next="cervix.brieven.genereren.master">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixBriefCleanupReader"
                       writer="cervixBriefCleanupWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <step id="cervix.brieven.genereren.master" next="cervixBrievenControle">
            <partition partitioner="cervixBrievenPartitioner" handler="cervixBrievenPartitionHandler"
                       step="cervixBrievenGenereren"/>
        </step>
        <step id="cervixBrievenControle">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixBrievenControleReader"
                       writer="cervixBrievenControleWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixBrievenListener"/>
        </listeners>
    </job>

    <step id="cervixBrievenGenereren">
        <tasklet transaction-manager="transactionManager">
            <chunk reader="cervixBrievenReader"
                   processor="cervixBrievenProcessor"
                   writer="cervixBrievenWriter" commit-interval="50">
            </chunk>
        </tasklet>
    </step>

    
    <beans:bean id="cervixHuisartsBepalenReader" class="nl.rivm.screenit.batch.jobs.cervix.huisartsberichten.huisartsbepalenstep.CervixHuisartsBepalenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixHuisartsBepalenWriter" class="nl.rivm.screenit.batch.jobs.cervix.huisartsberichten.huisartsbepalenstep.CervixHuisartsBepalenWriter"/>
    <beans:bean id="cervixHuisartsberichtVersturenReader" class="nl.rivm.screenit.batch.jobs.cervix.huisartsberichten.versturenstep.CervixHuisartsberichtVersturenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixHuisartsberichtVersturenWriter" class="nl.rivm.screenit.batch.jobs.cervix.huisartsberichten.versturenstep.CervixHuisartsberichtVersturenWriter"/>
    <beans:bean id="cervixHuisartsberichtenJobListener" class="nl.rivm.screenit.batch.jobs.cervix.huisartsberichten.CervixHuisartsberichtenJobListener"/>

    <job id="cervix_huisartsberichten" restartable="true">
        <step id="huisartsbepalenstep" next="versturenstep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixHuisartsBepalenReader"
                       writer="cervixHuisartsBepalenWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="versturenstep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixHuisartsberichtVersturenReader"
                       writer="cervixHuisartsberichtVersturenWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixHuisartsberichtenJobListener"/>
        </listeners>
    </job>

    
    <beans:bean id="cervixOrderAanmaakReader" class="nl.rivm.screenit.batch.jobs.cervix.order.aanmaakstep.CervixOrderAanmaakReader"/>
    <beans:bean id="cervixOrderAanmaakWriter" class="nl.rivm.screenit.batch.jobs.cervix.order.aanmaakstep.CervixOrderAanmaakWriter"/>

    <beans:bean id="cervixOrderVersturenReader" class="nl.rivm.screenit.batch.jobs.cervix.order.versturenstep.CervixOrderVersturenReader"/>
    <beans:bean id="cervixOrderVersturenWriter" class="nl.rivm.screenit.batch.jobs.cervix.order.versturenstep.CervixOrderVersturenWriter"/>

    <beans:bean id="cervixOrderListener" class="nl.rivm.screenit.batch.jobs.cervix.order.CervixOrderListener"/>

    <job id="cervix_order">
        <step id="orderAanmaakStep" next="orderVersturenStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixOrderAanmaakReader"
                       writer="cervixOrderAanmaakWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="orderVersturenStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixOrderVersturenReader"
                       writer="cervixOrderVersturenWriter"
                       commit-interval="1">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixOrderListener"/>
        </listeners>
    </job>

    
    <beans:bean id="regioBrievenCleanUpReader"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.cleanupstep.RegioBrievenCleanUpReader"/>
    <beans:bean id="regioBrievenCleanUpWriter"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.cleanupstep.RegioBrievenCleanUpWriter"/>

    <beans:bean id="regioBrievenControleReader"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.controlestep.RegioBrievenControleReader"/>
    <beans:bean id="regioBrievenControleWriter"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.controlestep.RegioBrievenControleWriter"/>

    <beans:bean id="regioBrievenListener"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.RegioBrievenListener"/>
    <beans:bean id="regioBrievenGenererenProcessor"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.genererenstep.RegioBrievenGenererenProcessor"/>
    <beans:bean id="regioBrievenGenererenReader"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.genererenstep.RegioBrievenGenererenReader"/>
    <beans:bean id="regioBrievenGenererenWriter"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.genererenstep.RegioBrievenGenererenWriter"/>
    <beans:bean id="regioBrievenPartitioner"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.genererenstep.RegioBrievenGenererenPartitioner"/>
    <beans:bean id="regioBrievenPartitionHandler"
                class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
        <beans:property name="taskExecutor" ref="taskExecutor"/>
        <beans:property name="step" ref="regio_brieven_genereren_step"/>
    </beans:bean>
    <beans:bean id="labformulierenGenererenReader"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.labformulierenstep.LabformulierGenererenReader"/>
    <beans:bean id="labformulierenGenererenWriter"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.labformulierenstep.LabformulierGenererenWriter"/>
    <beans:bean id="labformulierenGenererenPartitioner"
                class="nl.rivm.screenit.batch.jobs.cervix.brieven.regio.labformulierenstep.LabformulierGenererenPartitioner"/>
    <beans:bean id="labformulierenGenererenPartitionHandler"
                class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
        <beans:property name="taskExecutor" ref="taskExecutor"/>
        <beans:property name="step" ref="labformulieren_genereren_step"/>
    </beans:bean>

    
    <job id="regio_brieven">
        <step id="regio_brieven_cleanup_step" next="regio_brieven_partitioner_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="regioBrievenCleanUpReader"
                       writer="regioBrievenCleanUpWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <step id="regio_brieven_partitioner_step" next="labformulieren_genereren_patitioner_step">
            <partition partitioner="regioBrievenPartitioner" handler="regioBrievenPartitionHandler"
                       step="regio_brieven_genereren_step"/>
        </step>
        <step id="labformulieren_genereren_patitioner_step" next="regio_brieven_controle_step">
            <partition partitioner="labformulierenGenererenPartitioner"
                       handler="labformulierenGenererenPartitionHandler" step="labformulieren_genereren_step"/>
        </step>
        <step id="regio_brieven_controle_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="regioBrievenControleReader"
                       writer="regioBrievenControleWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="regioBrievenListener"/>
        </listeners>
    </job>
    <step id="regio_brieven_genereren_step">
        <tasklet transaction-manager="transactionManager">
            <chunk reader="regioBrievenGenererenReader" processor="regioBrievenGenererenProcessor"
                   writer="regioBrievenGenererenWriter" commit-interval="250">
            </chunk>
        </tasklet>
    </step>
    <step id="labformulieren_genereren_step">
        <tasklet transaction-manager="transactionManager">
            <chunk reader="labformulierenGenererenReader"
                   writer="labformulierenGenererenWriter" commit-interval="250">
            </chunk>
        </tasklet>
    </step>

    
    <beans:bean id="zasUitnodigingenBrievenCleanUpReader"
                class="nl.rivm.screenit.batch.jobs.cervix.uitnodigingenversturen.cleanupstep.ZasUitnodigingenBrievenCleanUpReader"/>
    <beans:bean id="zasUitnodigingenBrievenCleanUpWriter" class="nl.rivm.screenit.batch.jobs.cervix.uitnodigingenversturen.cleanupstep.ZasUitnodigingenBrievenCleanUpWriter"/>
    <beans:bean id="zasUitnodigingVersturenJobTasklet" class="nl.rivm.screenit.batch.jobs.cervix.uitnodigingenversturen.versturenstep.ZasUitnodigingenVersturenTasklet"/>
    <beans:bean id="zasUitnodigingVersturenJobListener" class="nl.rivm.screenit.batch.jobs.cervix.uitnodigingenversturen.ZasUitnodigingenVersturenListener"/>

    <job id="cervix_zas_uitnodiging_versturen_naar_inpakcentrum">
        <step id="zas_uitnodigingen_brieven_cleanup_step" next="uitnodigingenVersturen">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="zasUitnodigingenBrievenCleanUpReader"
                       writer="zasUitnodigingenBrievenCleanUpWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <step id="uitnodigingenVersturen">
            <tasklet ref="zasUitnodigingVersturenJobTasklet"
                     transaction-manager="transactionManager">
            </tasklet>
        </step>
        <listeners>
            <listener ref="zasUitnodigingVersturenJobListener"/>
        </listeners>
    </job>


    
    <beans:bean id="ZasKoppelReader" class="nl.rivm.screenit.batch.jobs.cervix.zaskoppelen.koppelstep.ZasKoppelReader"/>
    <beans:bean id="ZasKoppelWriter" class="nl.rivm.screenit.batch.jobs.cervix.zaskoppelen.koppelstep.ZasKoppelWriter"/>
    <beans:bean id="ZasKoppelListener" class="nl.rivm.screenit.batch.jobs.cervix.zaskoppelen.ZasKoppelenListener"/>

    
    <job id="cervix_koppeldata_verwerking">
        <step id="koppelen">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="ZasKoppelReader"
                       writer="ZasKoppelWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="ZasKoppelListener"/>
            <listener ref="koppelPromotionListener"/>
        </listeners>
    </job>

    
    <beans:bean id="retourzendingReader" class="nl.rivm.screenit.batch.jobs.cervix.aftergba.retourzendingstep.RetourzendingReader"/>
    <beans:bean id="retourzendingWriter" class="nl.rivm.screenit.batch.jobs.cervix.aftergba.retourzendingstep.RetourzendingWriter"/>
    <beans:bean id="deelnamemodusReader" class="nl.rivm.screenit.batch.jobs.cervix.aftergba.deelnamemodus.CervixDeelnamemodusReader"/>
    <beans:bean id="deelnamemodusWriter" class="nl.rivm.screenit.batch.jobs.cervix.aftergba.deelnamemodus.CervixDeelnamemodusWriter"/>
    <beans:bean id="afterGbaListener" class="nl.rivm.screenit.batch.jobs.cervix.aftergba.AfterGbaListener"/>

    <job id="cervix_na_gba">
        <step id="deelnamemodusBijwerken">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="deelnamemodusReader"
                       writer="deelnamemodusWriter" commit-interval="50">
                </chunk>
            </tasklet>
            <next on="*" to="retourzending"/>
            <next on="FAILED" to="retourzending"/>
        </step>
        <step id="retourzending">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="retourzendingReader"
                       writer="retourzendingWriter" commit-interval="250">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="afterGbaListener"/>
        </listeners>
    </job>


    
    <beans:bean id="bepalenVerrichtingenReader" class="nl.rivm.screenit.batch.jobs.cervix.verrichtingen.mainstep.CervixBepalenVerrichtingenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="bepalenVerrichtingenWriter" class="nl.rivm.screenit.batch.jobs.cervix.verrichtingen.mainstep.CervixBepalenVerrichtingenWriter"/>
    <beans:bean id="bepalenVerrichtingenListener" class="nl.rivm.screenit.batch.jobs.cervix.verrichtingen.CervixBepalenVerrichtingenListener"/>

    <beans:bean id="dubbeleCytologieVerrichtingenReader" class="nl.rivm.screenit.batch.jobs.cervix.verrichtingen.dubbelecytologiestep.CervixDubbeleCytologieVerrichtingenReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="dubbeleCytologieVerrichtingenWriter" class="nl.rivm.screenit.batch.jobs.cervix.verrichtingen.dubbelecytologiestep.CervixDubbeleCytologieVerrichtingenWriter"/>

    <beans:bean id="betalingCleanUpReader"
                class="nl.rivm.screenit.batch.jobs.cervix.verrichtingen.cleanup.BetalingBestandenCleanUpReader"/>
    <beans:bean id="betalingCleanUpWriter"
                class="nl.rivm.screenit.batch.jobs.cervix.verrichtingen.cleanup.BetalingBestandenCleanUpWriter"/>

    <job id="cervix_bepalen_verrichtingen">
        <step id="bepalenVerrichtingenStep" next="dubbeleCytologieVerrichtingenStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="bepalenVerrichtingenReader" writer="bepalenVerrichtingenWriter" commit-interval="100"></chunk>
            </tasklet>
        </step>
        <step id="dubbeleCytologieVerrichtingenStep" next="betalingCleanUpStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="dubbeleCytologieVerrichtingenReader" writer="dubbeleCytologieVerrichtingenWriter" commit-interval="100"></chunk>
            </tasklet>
        </step>
        <step id="betalingCleanUpStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="betalingCleanUpReader" writer="betalingCleanUpWriter" commit-interval="1"></chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="bepalenVerrichtingenListener"></listener>
        </listeners>
    </job>

    <beans:bean id="cervixOruBerichtenPartitioner" class="nl.rivm.screenit.batch.jobs.cervix.hpvoru.CervixOruBerichtenPartitioner">
        <beans:property name="timeout" value="60"/>  
    </beans:bean>

    
    <beans:bean id="cervixHpvOruBerichtenReader" class="nl.rivm.screenit.batch.jobs.cervix.hpvoru.CervixHpvOruBerichtenReader" scope="step"/>
    <beans:bean id="cervixHpvOruBerichtenWriter" class="nl.rivm.screenit.batch.jobs.cervix.hpvoru.CervixHpvOruBerichtenWriter" scope="step"/>

    <beans:bean id="cervixHpvOruBerichtenListener" class="nl.rivm.screenit.batch.jobs.cervix.hpvoru.CervixHpvOruBerichtenListener"/>

    <job id="cervix_hpv_oru">
        <step id="cervix.oru.berichten.master">
            <partition partitioner="cervixOruBerichtenPartitioner" step="oruVersturenStep">
                <handler task-executor="threadTaskExecutor" grid-size="5"/>
            </partition>
        </step>
        <listeners>
            <listener ref="cervixHpvOruBerichtenListener"/>
        </listeners>
    </job>

    <step id="oruVersturenStep">
        <tasklet transaction-manager="transactionManager">
            <chunk reader="cervixHpvOruBerichtenReader"
                   writer="cervixHpvOruBerichtenWriter"
                   commit-interval="50">
            </chunk>
        </tasklet>
    </step>


    
    <beans:bean id="cervixHpvMinFormulierVerwijderenReader" class="nl.rivm.screenit.batch.jobs.cervix.uitslagverwijderen.CervixHpvMinFormulierVerwijderenReader"/>
    <beans:bean id="cervixHpvMinFormulierVerwijderenWriter" class="nl.rivm.screenit.batch.jobs.cervix.uitslagverwijderen.CervixHpvMinFormulierVerwijderenWriter"/>

    <beans:bean id="cervixHpvMinFormulierVerwijderenListener" class="nl.rivm.screenit.batch.jobs.cervix.uitslagverwijderen.CervixHpvMinFormulierVerwijderenListener"/>

    <job id="cervix_hpvmin_verwijderen_uitslag">
        <step id="formulierVerwijderenStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixHpvMinFormulierVerwijderenReader"
                       writer="cervixHpvMinFormulierVerwijderenWriter"
                       commit-interval="100">
                </chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixHpvMinFormulierVerwijderenListener"/>
        </listeners>
    </job>


    
    <beans:bean id="cervixHeroverwegersPartitionHandler"
                class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
        <beans:property name="taskExecutor" ref="taskExecutor"/>
        <beans:property name="step" ref="heroverwegers_step"/>
        <beans:property name="gridSize" value="10"/>
    </beans:bean>
    <beans:bean id="cervixHeroverwegersReader" class="nl.rivm.screenit.batch.jobs.cervix.heroverwegers.CervixHeroverwegersReader">
        <beans:property name="fetchSize" value="50"/>
    </beans:bean>
    <beans:bean id="cervixHeroverwegersWriter" class="nl.rivm.screenit.batch.jobs.cervix.heroverwegers.CervixHeroverwegersWriter"/>
    <beans:bean id="cervixHeroverwegersListener" class="nl.rivm.screenit.batch.jobs.cervix.heroverwegers.CervixHeroverwegersListener"/>

    <job id="cervix_heroverwegers" restartable="true">
        <step id="cervix.heroverwegers.master">
            <partition partitioner="cervixLabPartitioner" handler="cervixHeroverwegersPartitionHandler"
                       step="heroverwegers_step"/>
        </step>
        <listeners>
            <listener ref="cervixHeroverwegersListener"/>
        </listeners>
    </job>

    <step id="heroverwegers_step">
        <tasklet transaction-manager="transactionManager">
            <chunk reader="cervixHeroverwegersReader"
                   writer="cervixHeroverwegersWriter" commit-interval="10">
            </chunk>
        </tasklet>
    </step>

    
    <beans:bean id="cervixCISMigrantenReader" class="nl.rivm.screenit.batch.jobs.cervix.cismigranten.CervixCISMigrantenReader"/>
    <beans:bean id="cervixCISMigrantenWriter" class="nl.rivm.screenit.batch.jobs.cervix.cismigranten.CervixCISMigrantenWriter"/>
    <beans:bean id="cervixCISMigrantenJobListener" class="nl.rivm.screenit.batch.jobs.cervix.cismigranten.CervixCISMigrantenJobListener"/>

    <job id="cervix_cismigranten_uitnodigen">
        <step id="cervix_miganten_uitnodigen_step">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="cervixCISMigrantenReader" writer="cervixCISMigrantenWriter" commit-interval="10"></chunk>
            </tasklet>
        </step>
        <listeners>
            <listener ref="cervixCISMigrantenJobListener"></listener>
        </listeners>
    </job>

    
    <beans:bean id="cervixVerlateDeelnameCovidPartitionHandler"
                class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
        <beans:property name="taskExecutor" ref="taskExecutor"/>
        <beans:property name="step" ref="verlate_deelname_covid_step_per_lab"/>
        <beans:property name="gridSize" value="10"/>
    </beans:bean>
    <beans:bean id="cervixVerlateDeelnameCovidReader" class="nl.rivm.screenit.batch.jobs.cervix.verlatedeelnamecovid.step.CervixVerlateDeelnameCovidReader"/>
    <beans:bean id="cervixVerlateDeelnameCovidWriter" class="nl.rivm.screenit.batch.jobs.cervix.verlatedeelnamecovid.step.CervixVerlateDeelnameCovidWriter"/>
    <beans:bean id="cervixVerlateDeelnameCovidDecider" class="nl.rivm.screenit.batch.jobs.cervix.verlatedeelnamecovid.step.CervixVerlateDeelnameCovidDecider"/>
    <beans:bean id="cervixVerlateDeelnameCovidJobListener" class="nl.rivm.screenit.batch.jobs.cervix.verlatedeelnamecovid.CervixVerlateDeelnameCovidJobListener"/>

    <job id="cervix_verlate_deelname_covid19">
        <decision id="verlate_deelname_covid19_decider" decider="cervixVerlateDeelnameCovidDecider">
            <next on="FAILED" to="verlate_deelname_covid_step"/>
            <end on="COMPLETED"/>
        </decision>

        <step id="verlate_deelname_covid_step">
            <partition partitioner="cervixLabPartitioner" handler="cervixVerlateDeelnameCovidPartitionHandler" step="verlate_deelname_covid_step_per_lab"/>
        </step>
        <listeners>
            <listener ref="cervixVerlateDeelnameCovidJobListener"></listener>
        </listeners>
    </job>

    <step id="verlate_deelname_covid_step_per_lab">
        <tasklet transaction-manager="transactionManager">
            <chunk reader="cervixVerlateDeelnameCovidReader" writer="cervixVerlateDeelnameCovidWriter" commit-interval="1"/>
        </tasklet>
    </step>
</beans:beans>

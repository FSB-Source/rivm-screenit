@import "../functions";
@import "../layout";

@mixin background-image(
  $image-1,
  $image-2: false,
  $image-3: false,
  $image-4: false,
  $image-5: false,
  $image-6: false,
  $image-7: false,
  $image-8: false,
  $image-9: false,
  $image-10: false
) {
  $images: compact($image-1, $image-2, $image-3, $image-4, $image-5, $image-6, $image-7, $image-8, $image-9, $image-10);

  @if $experimental-support-for-svg          and prefixed(-svg,    $images) {
    background-image: -svg($images);
    background-size: 100%;
  }
  @if $support-for-original-webkit-gradients and prefixed(-owg,    $images) {
    background-image: -owg($images);
  }
  @if $experimental-support-for-webkit       and prefixed(-webkit, $images) {
    background-image: -webkit($images);
  }
  @if $experimental-support-for-mozilla      and prefixed(-moz,    $images) {
    background-image: -moz($images);
  }
  @if $experimental-support-for-opera        and prefixed(-o,      $images) {
    background-image: -o($images);
  }
  background-image: $images;
}

@mixin filter-gradient($start-color, $end-color, $orientation: vertical) {
  @include has-layout;
  $gradient-type: if($orientation == vertical, 0, 1);
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 or $legacy-support-for-ie8 {
    filter: progid:DXImageTransform.Microsoft.gradient(gradientType=#{$gradient-type}, startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}');
  }
}